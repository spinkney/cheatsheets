[
{
  "id": "cheatsheet-styles",
  "title": "Cheatsheet styles",
  "url": "/cheatsheet-styles",
  "category": "Other",
  "keywords": null,
  "content_html": "<h2 id=\"intro\">Intro</h2>\n\n<h2 class=\"-three-column\" id=\"variants\">Variants</h2>\n\n<h3 id=\"h2-sections\">H2 sections</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-one-column</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-two-column</code></td>\n      <td><em>(default)</em></td>\n    </tr>\n    <tr>\n      <td><code>-three-column</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-left-reference</code></td>\n      <td>3 columns<br /><em>(short first column)</em></td>\n    </tr>\n    <tr>\n      <td><code>-no-hide</code></td>\n      <td>Don’t hide H2</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#two-columns\">H2 sections</a></p>\n\n<h3 id=\"h3-sections\">H3 sections</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-prime</code></td>\n      <td>Highlight</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#h3-sections-1\">H3 sections</a></p>\n\n<h3 id=\"tables\">Tables</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-bold-first</code></td>\n      <td>Bold first column</td>\n    </tr>\n    <tr>\n      <td><code>-headers</code></td>\n      <td>Show headers</td>\n    </tr>\n    <tr>\n      <td><code>-left-align</code></td>\n      <td>Don’t right align last column</td>\n    </tr>\n    <tr>\n      <td><code>-mute-em</code></td>\n      <td>Lower opacity for italics</td>\n    </tr>\n    <tr>\n      <td><code>-no-wrap</code></td>\n      <td>Don’t wrap text</td>\n    </tr>\n    <tr>\n      <td><code>-shortcuts</code></td>\n      <td>Shortcut keys</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#tables-1\">Tables</a></p>\n\n<h3 id=\"code\">Code</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-box-chars</code></td>\n      <td>Less line height<br /><em>for box drawing chars</em></td>\n    </tr>\n    <tr>\n      <td><code>-setup</code></td>\n      <td>Gray background</td>\n    </tr>\n    <tr>\n      <td><code>-wrap</code></td>\n      <td>Enables line-wrapping</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#code-1\">Code</a></p>\n\n<h3 id=\"paragraphs\">Paragraphs</h3>\n\n<table class=\"-gray\">\n  <tbody>\n    <tr>\n      <td><code>-setup</code></td>\n      <td>Gray background</td>\n    </tr>\n    <tr>\n      <td><code>-crosslink</code></td>\n      <td>Has arrow on the link</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#paragraphs-1\">Paragraphs</a></p>\n\n<h3 id=\"lists\">Lists</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-also-see</code></td>\n      <td>Lighter background</td>\n    </tr>\n    <tr>\n      <td><code>-four-column</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-six-column</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#lists-1\">Lists</a></p>\n\n<h3 class=\"-prime\" id=\"adding-variants\">Adding variants</h3>\n\n<pre><code>## Section\n{: .-two-column}\n</code></pre>\n\n<p>Devhints uses Kramdown, and supports adding classes via Kramdown’s syntax.</p>\n\n<h2 class=\"-three-column\" id=\"h3-sections-1\">H3 sections</h2>\n\n<h3 id=\"supported\">Supported</h3>\n\n<p>Each section can have the following children:</p>\n\n<h4 id=\"white\">White</h4>\n\n<ul>\n  <li><code>pre</code></li>\n  <li><code>ul</code></li>\n  <li><code>table</code></li>\n</ul>\n\n<h4 id=\"gray\">Gray</h4>\n\n<ul>\n  <li><code>p</code></li>\n  <li><code>h4</code></li>\n</ul>\n\n<h3 class=\"-prime\" id=\"prime-section\">Prime section</h3>\n\n<p>This is a section with <code>{: .-prime}</code>. Notice the fancy highlight! Great for “getting started” kind of snippets.</p>\n\n<h3 id=\"h3-section\">H3 section</h3>\n\n<p>Every box is an H3 section. The box will encompass everything inside the body of the H3.</p>\n\n<p>This is a basic section with paragraphs in it.</p>\n\n<h2 class=\"-three-column\" id=\"code-1\">Code</h2>\n\n<h3 id=\"basic-code\">Basic code</h3>\n\n<pre><code class=\"language-js\">here.is(() =&gt; {\n  some.code()\n})\n</code></pre>\n\n<pre><code class=\"language-js\">here.is.some.more()\n</code></pre>\n\n<p>Code blocks can be placed one after the other.</p>\n\n<p>See: <a href=\"/\">Cheatsheets</a></p>\n\n<h3 id=\"code-with-headings\">Code with headings</h3>\n\n<h4 class=\"-file\" id=\"indexjs\">index.js</h4>\n\n<pre><code class=\"language-js\">here.is(() =&gt; {\n  some.code()\n})\n</code></pre>\n\n<h4 class=\"-file\" id=\"otherjs\">other.js</h4>\n\n<pre><code class=\"language-js\">here.is.some.more()\n</code></pre>\n\n<p>Code blocks can have headings.</p>\n\n<h3 id=\"highlighted-lines\">Highlighted lines</h3>\n\n<pre data-line=\"3\"><code class=\"language-js\">app.start(() =&gt; {\n  const port = app.server.port\n  console.log(`Started at ${port}`)\n})\n</code></pre>\n\n<p>Add <code>{: data-line=\"3\"}</code> to add line highlights.</p>\n\n<h3 id=\"multiple-highlights\">Multiple highlights</h3>\n\n<pre data-line=\"2,3\"><code class=\"language-js\">app.start(() =&gt; {\n  const port = app.server.port\n  console.log(`Started at ${port}`)\n})\n</code></pre>\n\n<p>Add <code>{: data-line=\"2,3\"}</code> to add multiple line highlights.</p>\n\n<h3 id=\"setup-blocks\">Setup blocks</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import React from 'react'\n</code></pre>\n\n<pre><code class=\"language-js\">class Hello extends React.Component {\n  render () {\n    return &lt;span&gt;Hello&lt;/span&gt;\n  }\n}\n</code></pre>\n\n<p>Add <code>{: .-setup}</code> to a <code>pre</code> or <code>table</code> or <code>ul</code>.</p>\n\n<h3 id=\"long-lines\">Long lines</h3>\n\n<pre><code class=\"language-js\">function createNode(nodeName: string, options: { key: string }) {\n  return true\n}\n</code></pre>\n\n<p>Long lines will have scrollbars.</p>\n\n<h3 id=\"line-wrapping\">Line wrapping</h3>\n\n<pre class=\"-wrap\"><code class=\"language-js\">&lt;script&gt;(function(d,s){if(window.Promise&amp;&amp;[].includes&amp;&amp;Object.assign&amp;&amp;window.Map)return;var js,sc=d.getElementsByTagName(s)[0];js=d.createElement(s);js.src='https://cdn.polyfill.io/v2/polyfill.min.js';sc.parentNode.insertBefore(js, sc);}(document,'script'))&lt;/script&gt;\n</code></pre>\n\n<p>Add <code>-wrap</code> to wrap long lines.</p>\n\n<h2 class=\"-three-column\" id=\"lists-1\">Lists</h2>\n\n<h3 id=\"lists-2\">Lists</h3>\n\n<ul>\n  <li>This is</li>\n  <li>a list</li>\n  <li>with a few items</li>\n</ul>\n\n<p>Here’s an extra paragraph after the list.</p>\n\n<h3 id=\"lists-with-headings\">Lists with headings</h3>\n\n<h4 id=\"part-1\">Part 1</h4>\n\n<ul>\n  <li><code>createElement()</code></li>\n  <li><code>componentDidMount()</code></li>\n  <li><code>componentWillUnmount()</code></li>\n</ul>\n\n<h4 id=\"part-2\">Part 2</h4>\n\n<ul>\n  <li><code>shouldComponentUpdate()</code></li>\n  <li><code>componentWillReceiveProps()</code></li>\n</ul>\n\n<p>Here’s an extra paragraph after the list.</p>\n\n<h2 class=\"-one-column\" id=\"list-columns\">List columns</h2>\n\n<h3 id=\"six-columns\">Six columns</h3>\n\n<ul class=\"-six-column\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n  <li>Four</li>\n  <li>Five</li>\n  <li>Six</li>\n  <li>Seven</li>\n  <li>Eight</li>\n  <li>Nine</li>\n  <li>Ten</li>\n  <li>Eleven</li>\n</ul>\n\n<p>Add <code>{: .-six-column}</code> to make large lists.</p>\n\n<h3 id=\"four-columns\">Four columns</h3>\n\n<ul class=\"-four-column\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n  <li>Four</li>\n  <li>Five</li>\n  <li>Six</li>\n  <li>Seven</li>\n  <li>Eight</li>\n  <li>Nine</li>\n  <li>Ten</li>\n  <li>Eleven</li>\n</ul>\n\n<p>Add <code>{: .-four-column}</code> to make large lists.</p>\n\n<h3 id=\"also-see\">Also see</h3>\n\n<ul class=\"-also-see\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n  <li>Four</li>\n  <li>Five</li>\n  <li>Six</li>\n  <li>Seven</li>\n  <li>Eight</li>\n  <li>Nine</li>\n  <li>Ten</li>\n</ul>\n\n<p>Add <code>{: .-also-see}</code>.</p>\n\n<h2 class=\"-three-column\" id=\"paragraphs-1\">Paragraphs</h2>\n\n<h3 id=\"basic-paragraphs\">Basic paragraphs</h3>\n\n<p>This is a basic section with paragraphs in it. When paragraphs are the first elements in an H3 section’s body, they appear as white.</p>\n\n<h3 id=\"basic-paragraphs-1\">Basic paragraphs</h3>\n\n<pre><code>···\n</code></pre>\n\n<p>When paragraphs appear after <code>pre</code>/<code>table</code>/<code>ul</code>, they appear with a gray background.</p>\n\n<h3 id=\"preludes\">Preludes</h3>\n\n<p class=\"-setup\">Here’s a prelude paragraph. Add <code>{: .-setup}</code> to make paragraphs appear with a gray background.</p>\n\n<pre><code>···\n</code></pre>\n\n<h3 id=\"crosslink\">Crosslink</h3>\n\n<p>Add <code>{: .-crosslink}</code> to make big loud external links:</p>\n\n<pre><code>···\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"/\">Home</a></p>\n\n<h2 class=\"-three-column\" id=\"tables-1\">Tables</h2>\n\n<h3 id=\"basic-table\">Basic table</h3>\n\n<h4 id=\"date\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%m/%d/%Y</code></td>\n      <td><code>06/05/2013</code></td>\n    </tr>\n    <tr>\n      <td><code>%A, %B %e, %Y</code></td>\n      <td><code>Sunday, June 5, 2013</code></td>\n    </tr>\n    <tr>\n      <td><code>%b %e %a</code></td>\n      <td><code>Jun 5 Sun</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"time\">Time</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%H:%M</code></td>\n      <td><code>23:05</code></td>\n    </tr>\n    <tr>\n      <td><code>%I:%M %p</code></td>\n      <td><code>11:05 PM</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>This is a basic table with h4’s.</p>\n\n<h3 id=\"shortcuts\">Shortcuts</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>V</code></td>\n      <td>Vector</td>\n    </tr>\n    <tr>\n      <td><code>P</code></td>\n      <td>Pencil</td>\n    </tr>\n    <tr>\n      <td><code>T</code></td>\n      <td>Text</td>\n    </tr>\n    <tr>\n      <td><code>L</code></td>\n      <td>Line</td>\n    </tr>\n    <tr>\n      <td><code>R</code></td>\n      <td>Rectangle</td>\n    </tr>\n    <tr>\n      <td><code>O</code></td>\n      <td>Oval</td>\n    </tr>\n    <tr>\n      <td><code>U</code></td>\n      <td>Rounded</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Add <code>{: .-shortcuts}</code> to tables.</p>\n\n<h3 id=\"with-headers\">With headers</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Prefix</th>\n      <th>Example</th>\n      <th>What</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>//</code></td>\n      <td><code>//hr[@class='edge']</code></td>\n      <td>Anywhere</td>\n    </tr>\n    <tr>\n      <td><code>./</code></td>\n      <td><code>./a</code></td>\n      <td>Relative</td>\n    </tr>\n    <tr>\n      <td><code>/</code></td>\n      <td><code>/html/body/div</code></td>\n      <td>Root</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Add <code>{: .-headers}</code> to add headers.</p>\n\n<h2 id=\"two-columns\">Two columns</h2>\n\n<h3 id=\"one\">One</h3>\n\n<pre><code>···\n</code></pre>\n\n<h3 id=\"two\">Two</h3>\n\n<pre><code>···\n</code></pre>\n\n<h2 class=\"-left-reference\" id=\"left-reference\">Left reference</h2>\n\n<h3 id=\"one-1\">One</h3>\n\n<pre><code>···\n···\n···\n···\n···\n···\n···\n···\n</code></pre>\n\n<h3 id=\"two-1\">Two</h3>\n\n<pre><code>···\n</code></pre>\n\n<h3 id=\"three\">Three</h3>\n\n<pre><code>···\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"one-column\">One column</h2>\n\n<h3 id=\"one-2\">One</h3>\n\n<pre><code>···\n</code></pre>",
  "intro_html": "<p>This is a reference of styles that you can use on Stanhints cheatsheets. How\nmeta!\nYou can refer to this when contributing your own cheatsheets to the <a href=\"https://github.com/spinkney/cheatsheets/\">GitHub repo</a>.</p>",
  "description_html": "",
  "tags": ["WIP"],
  "updated": "2021-10-21"
},{
  "id": "git-branch",
  "title": "Git branches",
  "url": "/git-branch",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"working-with-branches\">Working with branches</h2>\n\n<h3 id=\"creating\">Creating</h3>\n\n<pre><code class=\"language-bash\">git checkout -b $branchname\ngit push origin $branchname --set-upstream\n</code></pre>\n\n<p>Creates a new branch locally then pushes it.</p>\n\n<h3 id=\"getting-from-remote\">Getting from remote</h3>\n\n<pre><code class=\"language-bash\">git fetch origin\ngit checkout --track origin/$branchname\n</code></pre>\n\n<p>Gets a branch in a remote.</p>\n\n<h3 id=\"delete-local-remote-tracking-branches\">Delete local remote-tracking branches</h3>\n\n<pre><code class=\"language-bash\">git remote prune origin\n</code></pre>\n\n<p>Deletes <code>origin/*</code> branches in your local copy. Doesn’t affect the remote.</p>\n\n<h3 id=\"list-existing-branches\">List existing branches</h3>\n\n<pre><code class=\"language-bash\">git branch --list\n</code></pre>\n\n<p>Existing branches are listed. Current branch will be highlighted with an asterisk.</p>\n\n<h3 id=\"list-merged-branches\">List merged branches</h3>\n\n<pre><code class=\"language-bash\">git branch -a --merged\n</code></pre>\n\n<p>List outdated branches that have been merged into the current one.</p>\n\n<h3 id=\"delete-a-local-branch\">Delete a local branch</h3>\n\n<pre><code class=\"language-bash\">git branch -d $branchname\n</code></pre>\n\n<p>Deletes the branch only if the changes have been pushed and merged with remote.</p>\n\n<h3 id=\"delete-branch-forcefully\">Delete branch forcefully</h3>\n\n<pre><code class=\"language-bash\">git branch -D $branchname\n</code></pre>\n\n<pre><code class=\"language-bash\">git branch -d $branchname\n</code></pre>\n\n<blockquote>\n  <p>Note: You can also use the -D flag which is synonymous with –delete –force instead of -d. This will delete the branch regardless of its merge status.\nDelete a branch irrespective of its merged status.</p>\n</blockquote>\n\n<h3 id=\"delete-remote-branch\">Delete remote branch</h3>\n\n<pre><code class=\"language-bash\">git push origin --delete :$branchname\n</code></pre>\n\n<p>Works for tags, too!</p>\n\n<h3 id=\"get-current-sha1\">Get current sha1</h3>\n\n<pre><code class=\"language-bash\">git show-ref HEAD -s\n</code></pre>\n<h3 id=\"reset-branch-and-remove-all-changes\">Reset branch and remove all changes</h3>\n\n<pre><code class=\"language-bash\">git reset --hard\n</code></pre>\n\n<h3 id=\"undo-commits-to-a-specific-commit\">Undo commits to a specific commit</h3>\n\n<pre><code class=\"language-bash\">git reset --hard $commit_id\n\n# Now push safely to your branch\ngit push --force-with-lease\n\n# Or push brutally to your branch\ngit push --force\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-02-13"
},{
  "id": "git-extras",
  "title": "Git extras",
  "url": "/git-extras",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 id=\"references\">References</h2>\n\n<h3 id=\"git-flow\">Git-flow</h3>\n\n<pre><code class=\"language-sh\">$ git feature myfeature\n  switched to branch 'feature/rofl'\n\n$ ...\n$ git checkout develop\n$ git feature finish myfeature\n  merging 'feature/rofl' into develop\n  deleted branch 'feature/rofl'\n</code></pre>\n\n<p>Also <code>git-bug</code> and <code>git-refactor</code>.</p>\n\n<h3 id=\"branches\">Branches</h3>\n\n<pre><code class=\"language-sh\">$ git delete-merged-branches\n  # hint: do `git remote prune origin` after\n\n$ git create-branch development\n$ git delete-branch development\n\n$ git fresh-branch gh-pages\n</code></pre>\n\n<h3 id=\"inspecting\">Inspecting</h3>\n\n<pre><code class=\"language-sh\">$ git summary   # repo age, commits, active days, etc\n$ git impact    # impact graph\n$ git effort    # commits per file\n</code></pre>\n\n<h3 id=\"github\">Github</h3>\n\n<pre><code class=\"language-sh\">$ git fork strongloop/express\n# sync your fork with the original repository:\n$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git\n$ git fetch upstream; git merge upstream/master\n</code></pre>\n\n<h3 id=\"tags\">Tags</h3>\n\n<pre><code class=\"language-sh\">$ git release v1.0.0           # commit, tag, push-tags\n$ git delete-tag v1.0.0\n</code></pre>\n\n<h3 id=\"conveniences\">Conveniences</h3>\n\n<pre><code class=\"language-sh\">$ git ignore \"*.log\"\n</code></pre>\n\n<h3 id=\"locking\">Locking</h3>\n\n<p>Assumes that changes will not be committed.</p>\n\n<pre><code class=\"language-sh\">$ git lock config/database.yml\n$ git unlock config/database.yml\n</code></pre>\n\n<h3 id=\"etc\">Etc</h3>\n\n<pre><code class=\"language-sh\">$ git obliterate secret.yml   # remove all references to it\n</code></pre>\n\n<h3 id=\"references-1\">References</h3>\n\n<ul>\n  <li>https://github.com/visionmedia/git-extras</li>\n</ul>",
  "intro_html": "<p>Quick reference to some utilities in the <a href=\"https://github.com/tj/git-extras\">git-extras</a> utilities.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "git-log-format",
  "title": "Git log format string",
  "url": "/git-log-format",
  "category": "Git",
  "keywords": ["git log --pretty=format:%H","%H - Commit hash","%an - Author","%aD - Author date"],
  "content_html": "<h2 class=\"-three-column\" id=\"log-format\">Log format</h2>\n\n<h3 class=\"-prime\" id=\"pretty-format\">Pretty format</h3>\n\n<pre><code class=\"language-bash\">git log --pretty=\"format:%H\"\n</code></pre>\n\n<p>See the next tables on format variables.</p>\n\n<h3 id=\"hash\">Hash</h3>\n\n<h4 id=\"commit\">Commit</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%H</code></td>\n      <td>commit hash</td>\n    </tr>\n    <tr>\n      <td><code>%h</code></td>\n      <td>(abbrev) commit hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"tree\">Tree</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%T</code></td>\n      <td>tree hash</td>\n    </tr>\n    <tr>\n      <td><code>%t</code></td>\n      <td>(abbrev) tree hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"parent\">Parent</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%P</code></td>\n      <td>parent hash</td>\n    </tr>\n    <tr>\n      <td><code>%p</code></td>\n      <td>(abbrev) parent hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"commit-1\">Commit</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%s</code></td>\n      <td>commit subject</td>\n    </tr>\n    <tr>\n      <td><code>%f</code></td>\n      <td>commit subject, filename style</td>\n    </tr>\n    <tr>\n      <td><code>%b</code></td>\n      <td>commit body</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>%d</code></td>\n      <td>ref names</td>\n    </tr>\n    <tr>\n      <td><code>%e</code></td>\n      <td>encoding</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"author-and-committer\">Author and committer</h2>\n\n<h3 id=\"author\">Author</h3>\n\n<h4 id=\"name\">Name</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%an</code></td>\n      <td>author</td>\n    </tr>\n    <tr>\n      <td><code>%aN</code></td>\n      <td>author, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"email\">Email</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%ae</code></td>\n      <td>author email</td>\n    </tr>\n    <tr>\n      <td><code>%aE</code></td>\n      <td>author email, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"date\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%aD</code></td>\n      <td>author date (rfc2882)</td>\n    </tr>\n    <tr>\n      <td><code>%ar</code></td>\n      <td>author date (relative)</td>\n    </tr>\n    <tr>\n      <td><code>%at</code></td>\n      <td>author date (unix timestamp)</td>\n    </tr>\n    <tr>\n      <td><code>%ai</code></td>\n      <td>author date (iso8601)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"committer\">Committer</h3>\n\n<h4 id=\"name-1\">Name</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%cn</code></td>\n      <td>committer name</td>\n    </tr>\n    <tr>\n      <td><code>%cN</code></td>\n      <td>committer name, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"email-1\">Email</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%ce</code></td>\n      <td>committer email</td>\n    </tr>\n    <tr>\n      <td><code>%cE</code></td>\n      <td>committer email, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"date-1\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%cD</code></td>\n      <td>committer date (rfc2882)</td>\n    </tr>\n    <tr>\n      <td><code>%cr</code></td>\n      <td>committer date (relative)</td>\n    </tr>\n    <tr>\n      <td><code>%ct</code></td>\n      <td>committer date (unix timestamp)</td>\n    </tr>\n    <tr>\n      <td><code>%ci</code></td>\n      <td>committer date (iso8601)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"./git-log\">Git log cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-18"
},{
  "id": "git-log",
  "title": "git log",
  "url": "/git-log",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"revision-ranges\">Revision ranges</h3>\n\n<pre><code class=\"language-bash\">git log master             # branch\ngit log origin/master      # branch, remote\ngit log v1.0.0             # tag\n\ngit log master develop\n\ngit log v2.0..master       # reachable from *master* but not *v2.0*\ngit log v2.0...master      # reachable from *master* and *v2.0*, but not both\n</code></pre>\n\n<p>See <a href=\"./git-revisions\">gitrevisions</a>.</p>\n\n<h3 id=\"basic-filters\">Basic filters</h3>\n\n<pre><code class=\"language-bash\">-n, --max-count=2\n    --skip=2\n</code></pre>\n\n<pre><code class=\"language-bash\">    --since=\"1 week ago\"\n    --until=\"yesterday\"\n</code></pre>\n\n<pre><code class=\"language-bash\">    --author=\"Rico\"\n    --committer=\"Rico\"\n</code></pre>\n\n<h3 id=\"search\">Search</h3>\n\n<pre><code class=\"language-bash\">    --grep=\"Merge pull request\"   # in commit messages\n    -S\"console.log\"               # in code\n    -G\"foo.*\"                     # in code (regex)\n</code></pre>\n\n<pre><code class=\"language-bash\">    --invert-grep\n    --all-match                   # AND in multi --grep\n</code></pre>\n\n<h3 id=\"limiting\">Limiting</h3>\n\n<pre><code class=\"language-bash\">    --merges\n    --no-merges\n</code></pre>\n\n<pre><code class=\"language-bash\">    --first-parent          # no stuff from merged branches\n</code></pre>\n\n<pre><code class=\"language-bash\">    --branches=\"feature/*\"\n    --tags=\"v*\"\n    --remotes=\"origin\"\n</code></pre>\n\n<h3 id=\"simplification\">Simplification</h3>\n\n<pre><code class=\"language-bash\">git log -- app/file.rb          # only file\n    --simplify-by-decoration    # tags and branches\n</code></pre>\n\n<h3 id=\"ordering\">Ordering</h3>\n\n<pre><code class=\"language-bash\">    --date-order\n    --author-date-order\n    --topo-order              # \"smart\" ordering\n    --reverse\n</code></pre>\n\n<h3 id=\"formatting\">Formatting</h3>\n\n<pre><code class=\"language-bash\">    --abbrev-commit\n    --oneline\n    --graph\n</code></pre>\n\n<h3 id=\"custom-formats\">Custom formats</h3>\n\n<pre><code class=\"language-bash\">    --pretty=\"format:%H\"\n</code></pre>\n\n<p>See: <a href=\"./git-log-format\">Git log format cheatsheet</a></p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"./git-log-format\">Git log format cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "git-revisions",
  "title": "Git revisions",
  "url": "/git-revisions",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"example-usages\">Example usages</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...develop</code></td>\n      <td>inspect differences in branches</td>\n    </tr>\n    <tr>\n      <td><em><code>git rebase -i</code></em> <code>HEAD~3</code></td>\n      <td>rebase last 3 commits</td>\n    </tr>\n    <tr>\n      <td><em><code>git reset --hard</code></em> <code>HEAD@{2}</code></td>\n      <td>undo last operation that changed HEAD</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v2^{}</code></td>\n      <td>checkout the <code>v2</code> tag (not <code>v2</code> branch)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>The 3rd argument in each of these commands is a <code>gitrevision</code>. These gitrevisions can be passed to many Git commands.</p>\n\n<h3 id=\"common-git-revisions\">Common git revisions</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Reference</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>dae68e1</code></td>\n      <td>sha1</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>HEAD</code></td>\n      <td>reference</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>v1.0.0</code></td>\n      <td>tag</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master</code></td>\n      <td>local branch</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>origin/master</code></td>\n      <td>remote branch</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master~2</code></td>\n      <td>2 commits back from master</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master..fix</code></td>\n      <td>reachable from <em>fix</em> but not <em>master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>master...fix</code></td>\n      <td>reachable from <em>fix</em> and <em>master</em>, but not both</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>These are just the common ones, there’s a lot more below! (These work in many other commands, not just <code>git show</code>.)</p>\n\n<h2 id=\"reference\">Reference</h2>\n\n<h3 id=\"commits\">Commits</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>dae68e1</code></td>\n      <td>sha1</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"references\">References</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>HEAD</code></td>\n      <td>reference</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master</code></td>\n      <td>branch</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v1.0.0</code></td>\n      <td>tag</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>origin/master</code></td>\n      <td>aka, <em>refs/remotes/origin/master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>heads/master</code></td>\n      <td>aka, <em>refs/heads/master</em></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"searching-back\">Searching back</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{yesterday}</code></td>\n      <td>also <em>1 day ago</em>, etc</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{2}</code></td>\n      <td>2nd prior value</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{push}</code></td>\n      <td>where <em>master</em> would push to</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^</code></td>\n      <td>parent commit</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^2</code></td>\n      <td>2nd parent, eg, what it merged</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master~5</code></td>\n      <td>5 parents back</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^0</code></td>\n      <td>this commit; disambiguates from tags</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v0.99.8^{tag}</code></td>\n      <td>can be <em>commit</em>, <em>tag</em>, <em>tree</em>, <em>object</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v0.99.8^{}</code></td>\n      <td>defaults to <em>{tag}</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>\":/fix bug\"</code></td>\n      <td>searches commit messages</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"other\">Other</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>HEAD:README</code></td>\n      <td>…</td>\n    </tr>\n    <tr>\n      <td><code>0:README</code></td>\n      <td>(0 to 3) …</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"ranges\">Ranges</h2>\n\n<h3 id=\"ranges-1\">Ranges</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master</code></td>\n      <td>reachable parents from master</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>^master</code></td>\n      <td>exclude reachable parents from master</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master..fix</code></td>\n      <td>reachable from <em>fix</em> but not <em>master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...fix</code></td>\n      <td>reachable from <em>fix</em> and <em>master</em>, but not both</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^@</code></td>\n      <td>parents of <em>HEAD</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^!</code></td>\n      <td><em>HEAD</em>, then excluding parents’s ancestors</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^{:/fix}</code></td>\n      <td>search previous <em>HEAD</em>s matching criteria</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"ranges-illustration\">Ranges illustration</h3>\n\n<pre class=\"-box-chars -setup\"><code class=\"language-nohighlight\">A ─┬─ E ── F ── G   master\n   │\n   └─ B ── C ── D   fix\n</code></pre>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master..fix</code></td>\n      <td>BCD</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...fix</code></td>\n      <td>BCD and EFG</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"references-1\">References</h2>\n\n<ul>\n  <li><a href=\"https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html\">Git Tools - Revision Selection</a> <em>(git-scm.com)</em></li>\n  <li><a href=\"https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html\">gitrevisions(7)</a> <em>(kernel.org)</em></li>\n</ul>",
  "intro_html": "<p>A list of revision specifications you can use with <code>git log</code> and many other Git commands. Summarized from <code>gitrevisions(7)</code> man page.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-11"
},{
  "id": "git-tricks",
  "title": "Git tricks",
  "url": "/git-tricks",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 id=\"refs\">Refs</h2>\n\n<pre><code>HEAD^       # 1 commit before head\nHEAD^^      # 2 commits before head\nHEAD~5      # 5 commits before head\n</code></pre>\n\n<h2 id=\"branches\">Branches</h2>\n\n<pre><code># create a new branch\n  git checkout -b $branchname\n  git push origin $branchname --set-upstream\n\n# get a remote branch\n  git fetch origin\n  git checkout --track origin/$branchname\n\n# delete local remote-tracking branches (lol)\n  git remote prune origin\n\n# list merged branches\n  git branch -a --merged\n\n# delete remote branch\n  git push origin :$branchname\n  \n# go back to previous branch\n  git checkout -\n</code></pre>\n\n<h2 id=\"collaboration\">Collaboration</h2>\n\n<pre><code># Rebase your changes on top of the remote master\n  git pull --rebase upstream master\n  \n# Squash multiple commits into one for a cleaner git log\n# (on the following screen change the word pick to either 'f' or 's')\n  git rebase -i $commit_ref\n</code></pre>\n\n<h2 id=\"submodules\">Submodules</h2>\n\n<pre><code># Import .gitmodules\n  git submodule init\n\n# Clone missing submodules, and checkout commits\n  git submodule update --init --recursive\n\n# Update remote URLs in .gitmodules\n# (Use when you changed remotes in submodules)\n  git submodule sync\n</code></pre>\n\n<h2 id=\"diff\">Diff</h2>\n\n<h3 id=\"diff-with-stats\">Diff with stats</h3>\n\n<pre><code>git diff --stat\napp/a.txt    | 2 +-\napp/b.txt    | 8 ++----\n2 files changed, 10 insertions(+), 84 deletions(-)\n</code></pre>\n\n<h3 id=\"just-filenames\">Just filenames</h3>\n\n<pre><code>git diff --summary\n</code></pre>\n\n<h2 id=\"log-options\">Log options</h2>\n\n<pre><code>--oneline\n  e11e9f9 Commit message here\n\n--decorate\n  shows \"(origin/master)\"\n\n--graph\n  shows graph lines\n\n--date=relative\n  \"2 hours ago\"\n</code></pre>\n\n<h2 id=\"misc\">Misc</h2>\n\n<h3 id=\"cherry-pick\">Cherry pick</h3>\n\n<pre><code>git rebase 76acada^\n</code></pre>\n\n<h3 id=\"misc-1\">Misc</h3>\n\n<pre><code># get current sha1 (?)\n  git show-ref HEAD -s\n\n# show single commit info\n  git log -1 f5a960b5\n\n# Go back up to root directory\n  cd \"$(git rev-parse --show-top-level)\"\n</code></pre>\n\n<h2 id=\"short-log\">Short log</h2>\n\n<pre><code> $ git shortlog\n $ git shortlog HEAD~20..    # last 20 commits\n\n James Dean (1):\n     Commit here\n     Commit there\n\n Frank Sinatra (5):\n     Another commit\n     This other commit\n</code></pre>\n\n<h2 id=\"bisect\">Bisect</h2>\n\n<pre><code>git bisect start HEAD HEAD~6\ngit bisect run npm test\ngit checkout refs/bisect/bad   # this is where it screwed up\ngit bisect reset\n</code></pre>\n\n<h3 id=\"manual-bisection\">Manual bisection</h3>\n\n<pre><code>git bisect start\ngit bisect good   # current version is good\n\ngit checkout HEAD~8\nnpm test          # see if it's good\ngit bisect bad    # current version is bad\n\ngit bisect reset  # abort\n</code></pre>\n\n<h2 id=\"searching\">Searching</h2>\n\n<pre><code>git log --grep=\"fixes things\"  # search in commit messages\ngit log -S\"window.alert\"       # search in code\ngit log -G\"foo.*\"              # search in code (regex)\n</code></pre>\n\n<h2 id=\"gpg-signing\">GPG Signing</h2>\n\n<pre><code>git config set user.signingkey &lt;GPG KEY ID&gt;       # Sets GPG key to use for signing\n\ngit commit -m \"Implement feature Y\" --gpg-sign    # Or -S, GPG signs commit\n\ngit config set commit.gpgsign true                # Sign commits by default\ngit commit -m \"Implement feature Y\" --no-gpg-sign # Do not sign\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "stan-functions",
  "title": "Stan Functions",
  "url": "/stan-functions",
  "category": "Stan-lang",
  "keywords": null,
  "content_html": "<h2 class=\"-two-column\" id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<ul>\n  <li><a href=\"https://mc-stan.org/docs/2_28/stan-users-guide/basic-functions.html\">Basic Functions</a> <em>(Stan User Guide: User Defined Functions)</em></li>\n  <li><a href=\"https://github.com/spinkney/helpful_stan_functions\">Helpful Functions Repository</a> <em>(Lots of Examples)</em></li>\n</ul>\n\n<h3 class=\"-prime\" id=\"example\">Example</h3>\n\n<h4 class=\"-file\" id=\"addstan\">add.stan</h4>\n\n<pre><code class=\"language-stan\">functions {\n  real add(real x, real y) {\n    return x + y;\n  }\n  data {\n      real x;\n  }\n  parameters {\n      real y;\n  }\n  transformed parameters {\n      real z = add(x, y);\n  }\n  model {\n      y ~ std_normal();\n  }\n}\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"types-of-user-defined-functions\">Types of User Defined Functions</h2>\n\n<h3 id=\"basic-type-declarations\">Basic Type Declarations</h3>\n\n<p>Typical variable types. No constraint types like <code>simplex[]</code>, <code>cholesky_factor_corr[]</code>, etc.!</p>\n<pre><code class=\"language-stan\">real foo(real x);\nvector foo(real x);\nmatrix foo(real x);\narray[] real foo(real x);\narray[ , ] real foo(real x);\narray[ , , ] real foo(real x);\n...\n</code></pre>\n\n<h3 id=\"void-type\">Void Type</h3>\n\n<p>These do not return any value.</p>\n<pre><code class=\"language-stan\">void print_hello(real x) {\n    print(\"hello\");\n}\n\nvoid increment_lp(real x){\n    target += 1;\n}\n</code></pre>\n\n<h3 id=\"distribution-type\">Distribution Type</h3>\n\n<p>Keywords <code>_lpdf</code>, <code>_lpmf</code>, <code>_lcdf</code></p>\n\n<pre><code class=\"language-stan\">functions {\n    real my_normal_lpdf(real y, real mu, real sigma) {\n        return normal_lpdf(y | mu, sigma);\n    }\n    real my_normal_lcdf(real y, real mu, real sigma) {\n        return normal_lcdf(y | mu, sigma);   \n    }\n}\n// ...\nmodel {\n    alpha ~ my_normal(mu, sigma);\n    // or target += my_normal_lpdf(alpha | mu, sigma);\n    target += my_normal_lcdf(x | mu, sigma);\n}\n</code></pre>\n<h3 id=\"log-probability-type\">Log-probability Type</h3>\n\n<p>Keyword <code>_lp</code>. These can access the log probability accumulator in the transformed parameters or model blocks.</p>\n\n<pre><code class=\"language-stan\">functions {\n  vector center_lp(vector beta_raw, real mu, real sigma) {\n    beta_raw ~ std_normal();\n    sigma ~ cauchy(0, 5);\n    mu ~ cauchy(0, 2.5);\n    return sigma * beta_raw + mu;\n  }\n  // ...\n}\nparameters {\n  vector[K] beta_raw;\n  real mu_beta;\n  real&lt;lower=0&gt; sigma_beta;\n  // ...\n}\ntransformed parameters {\n  vector[K] beta;\n  // ...\n  beta = center_lp(beta_raw, mu_beta, sigma_beta);\n  // ...\n}\n</code></pre>\n\n<h3 id=\"random-number-type\">Random number Type</h3>\n<p>Keywork <code>_rng</code>. Works in transformed data and generated quantities blocks.</p>\n\n<pre><code class=\"language-stan\">real normal_lub_rng(real mu, real sigma, real lb, real ub) {\n  real p_lb = normal_cdf(lb, mu, sigma);\n  real p_ub = normal_cdf(ub, mu, sigma);\n  real u = uniform_rng(p_lb, p_ub);\n  real y = mu + sigma * inv_Phi(u);\n  return y;\n}\n</code></pre>\n\n<h3 id=\"recursive-functions\">Recursive Functions</h3>\n\n<pre><code class=\"language-stan\">matrix matrix_pow(matrix a, int n);\n\nmatrix matrix_pow(matrix a, int n) {\n  if (n == 0) {\n    return diag_matrix(rep_vector(1, rows(a)));\n  } else {\n    return a *  matrix_pow(a, n - 1);\n  }\n}\n</code></pre>\n<p>Although not a type, these require double declaration. Once with the signature and again with the function definition. See <a href=\"https://mc-stan.org/docs/2_28/stan-users-guide/recursive-functions.html\">Recursive Functions</a>.</p>\n\n<h2 class=\"-two-column\" id=\"catching-errors\">Catching Errors</h2>\n\n<h3 id=\"reject-statements\">Reject statements</h3>\n\n<p>Detect bad or illegal outcomes.</p>\n<pre><code class=\"language-stan\">real positive_number(real x) {\n    if (x &lt; 0) {\n        reject(\"positive_number(x): x must be positive; found x = \", x);\n    }\n\n    return x;\n}\n</code></pre>\n\n<h3 id=\"print-statements\">Print statements</h3>\n\n<p>Need to see what’s happening in the function? Use print statements.</p>\n\n<pre><code class=\"language-stan\">real sqrt_problem (real x) {\n    real y = sqrt(x);\n\n    // you forgot to check for negatives \n    // so you're debugging with print \n    // to see what's happening\n\n    print(\"sqrt_problem: x is \", x, \" return is \", y);\n\n    return y;\n}\n</code></pre>\n\n<h2 id=\"d\">D</h2>",
  "intro_html": "<p>Want to know more about Stan functions? Go to <a href=\"https://mc-stan.org/docs/2_28/functions-reference/index.html\">Stan Functions Reference</a>.</p>",
  "description_html": "",
  "tags": ["WIP"],
  "updated": "2021-11-22"
},{
  "id": "tig",
  "title": "Tig",
  "url": "/tig",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"installing\">Installing</h3>\n\n<pre><code class=\"language-bash\"># MacOS + Homebrew\n$ brew install tig --HEAD\n</code></pre>\n\n<pre><code class=\"language-bash\"># Ubuntu\n$ sudo apt install tig\n</code></pre>\n\n<h3 id=\"invocation\">Invocation</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>tig</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>tig status</code></td>\n      <td>Status</td>\n    </tr>\n    <tr>\n      <td><code>tig blame FILE</code></td>\n      <td>Blame</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>tig master</code></td>\n      <td>Show a branch</td>\n    </tr>\n    <tr>\n      <td><code>tig test..master</code></td>\n      <td>Show difference between two branches</td>\n    </tr>\n    <tr>\n      <td><code>tig FILE</code></td>\n      <td>Show history of file</td>\n    </tr>\n    <tr>\n      <td><code>tig v0.0.3:README</code></td>\n      <td>Show contents of file in a specific revision</td>\n    </tr>\n    <tr>\n      <td><code>tig -C /repo/path</code></td>\n      <td>Run in dir <code>/repo/path</code> (like <code>git -C</code>)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>You can substitute <code>git log</code> → <code>tig</code>.</p>\n\n<h2 class=\"-three-column\" id=\"shortcut-keys\">Shortcut keys</h2>\n\n<h3 id=\"switching-views\">Switching views</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>m</code></td>\n      <td>Main view</td>\n    </tr>\n    <tr>\n      <td><code>s</code></td>\n      <td>Status</td>\n    </tr>\n    <tr>\n      <td><code>t</code></td>\n      <td>Tree (files)</td>\n    </tr>\n    <tr>\n      <td><code>y</code></td>\n      <td>Stash view</td>\n    </tr>\n    <tr>\n      <td><code>g</code></td>\n      <td>Grep</td>\n    </tr>\n    <tr>\n      <td><code>h</code></td>\n      <td>Help</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"all-views\">All views</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>j</code>  <code>k</code></td>\n      <td>Up/down</td>\n    </tr>\n    <tr>\n      <td><code>J</code>  <code>K</code></td>\n      <td>Next/previous</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>&lt;</code></td>\n      <td>Back</td>\n    </tr>\n    <tr>\n      <td><code>R</code></td>\n      <td>Refresh</td>\n    </tr>\n    <tr>\n      <td><code>q</code></td>\n      <td>Close</td>\n    </tr>\n    <tr>\n      <td><code>Q</code></td>\n      <td>Close all</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>^N</code></td>\n      <td>Next on parent view</td>\n    </tr>\n    <tr>\n      <td><code>^P</code></td>\n      <td>Previous on parent view</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"m---main-view\"><code>m</code> - Main view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>D</code></td>\n      <td>Toggle date display modes</td>\n    </tr>\n    <tr>\n      <td><code>A</code></td>\n      <td>Toggle author display modes</td>\n    </tr>\n    <tr>\n      <td><code>X</code></td>\n      <td>Toggle commit sha</td>\n    </tr>\n    <tr>\n      <td><code>C</code></td>\n      <td>Cherry pick a commit</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"s---status-view\"><code>s</code> - Status view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>u</code></td>\n      <td>Stage/unstage file or chunk</td>\n    </tr>\n    <tr>\n      <td><code>!</code></td>\n      <td>Revert file or chunk</td>\n    </tr>\n    <tr>\n      <td><code>C</code></td>\n      <td>Commit</td>\n    </tr>\n    <tr>\n      <td><code>M</code></td>\n      <td>Merge</td>\n    </tr>\n    <tr>\n      <td><code>1</code></td>\n      <td>Stage line</td>\n    </tr>\n    <tr>\n      <td><code>[</code> <code>]</code></td>\n      <td>Increase/decrease the diff context</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"h---branch-view\"><code>h</code> - Branch view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>i</code></td>\n      <td>Change sort header</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"h---blame-view\"><code>h</code> - Blame view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>,</code></td>\n      <td>Parent commit</td>\n    </tr>\n  </tbody>\n</table>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-11-16"
},{
  "id": "assets/css/style.css",
  "title": null,
  "url": "/assets/css/style.css",
  "category": "Others",
  "keywords": null,
  "content_html": "<p>@import “jekyll-theme-primer”;</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "redirects.json",
  "title": null,
  "url": "/redirects.json",
  "category": "Others",
  "keywords": null,
  "content_html": "<p>{}</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
}
]

